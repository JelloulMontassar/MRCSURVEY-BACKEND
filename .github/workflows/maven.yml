name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_DATABASE: organizecrm
          MYSQL_USER: test
          MYSQL_PASSWORD: "123"
          MYSQL_ROOT_PASSWORD: "123"
        options: >-
          --health-cmd "mysqladmin ping --silent"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 3306:3306

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Wait for MySQL to be ready
        run: |
          echo "Waiting for MySQL to be ready..."
          for i in {30..0}; do
            if mysqladmin ping -h"127.0.0.1" --silent; then
              break
            fi
            echo 'MySQL is unavailable - sleeping'
            sleep 2
          done
          if [ "$i" = 0 ]; then
            echo 'MySQL did not start in time'
            exit 1
          fi

      - name: Ensure MySQL Database and User are Ready
        run: |
          echo "Creating database and user..."
          mysql -h 127.0.0.1 -u root -p"123" -e "CREATE DATABASE IF NOT EXISTS organizecrm;"
          mysql -h 127.0.0.1 -u root -p"123" -e "CREATE USER IF NOT EXISTS 'test'@'%' IDENTIFIED BY '123';"
          mysql -h 127.0.0.1 -u root -p"123" -e "GRANT ALL PRIVILEGES ON organizecrm.* TO 'test'@'%';"
          mysql -h 127.0.0.1 -u root -p"123" -e "FLUSH PRIVILEGES;"

      - name: Set Environment Variables for Vault and MySQL
        run: |
          echo "SPRING_PROFILES_ACTIVE=ci" >> $GITHUB_ENV
          echo "SPRING_CLOUD_VAULT_URI=https://my-vault-app-f93d58bccb0a.herokuapp.com" >> $GITHUB_ENV
          echo "SPRING_CLOUD_VAULT_TOKEN=hvs.CAESIH_7Pz78iq5WeFKFPVdKkwznjB2MCpAdiMHRtQQvBgX2Gh4KHGh2cy5iUndjWVROYjh1Z05MYkVoT2xQWlFIVUo" >> $GITHUB_ENV

          # MySQL connection details
          echo "DB_HOST=127.0.0.1" >> $GITHUB_ENV
          echo "DB_PORT=3306" >> $GITHUB_ENV
          echo "DB_NAME=organizecrm" >> $GITHUB_ENV
          echo "DB_USERNAME=test" >> $GITHUB_ENV
          echo "DB_PASSWORD=123" >> $GITHUB_ENV

      - name: Verify MySQL Connection
        run: |
          echo "Verifying MySQL connection..."
          mysql -h 127.0.0.1 -u test -p"123" -e "SHOW DATABASES;"
          if [ $? -ne 0 ]; then
            echo "Unable to connect to MySQL with the provided credentials."
            exit 1
          fi

      - name: Run Maven tests
        run: mvn test -Dspring.jpa.show-sql=true -Dspring.jpa.properties.hibernate.format_sql=true -Dlogging.level.org.hibernate.SQL=DEBUG -Dlogging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
        env:
          SPRING_PROFILES_ACTIVE: ci
          SPRING_CLOUD_VAULT_URI: ${{ env.SPRING_CLOUD_VAULT_URI }}
          SPRING_CLOUD_VAULT_TOKEN: ${{ env.SPRING_CLOUD_VAULT_TOKEN }}
          DB_HOST: ${{ env.DB_HOST }}
          DB_PORT: ${{ env.DB_PORT }}
          DB_NAME: ${{ env.DB_NAME }}
          DB_USERNAME: ${{ env.DB_USERNAME }}
          DB_PASSWORD: ${{ env.DB_PASSWORD }}

      - name: Build with Maven
        run: mvn -B package --file pom.xml
        env:
          SPRING_PROFILES_ACTIVE: ci
          SPRING_CLOUD_VAULT_URI: ${{ env.SPRING_CLOUD_VAULT_URI }}
          SPRING_CLOUD_VAULT_TOKEN: ${{ env.SPRING_CLOUD_VAULT_TOKEN }}
          DB_HOST: ${{ env.DB_HOST }}
          DB_PORT: ${{ env.DB_PORT }}
          DB_NAME: ${{ env.DB_NAME }}
          DB_USERNAME: ${{ env.DB_USERNAME }}
          DB_PASSWORD: ${{ env.DB_PASSWORD }}

      # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
