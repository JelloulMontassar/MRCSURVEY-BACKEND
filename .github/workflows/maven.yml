name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: main

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Import Secrets from Vault
        id: import-secrets
        uses: hashicorp/vault-action@v2
        with:
          url: my-vault-app-f93d58bccb0a.herokuapp.com
          token: "hvs.CAESIH_7Pz78iq5WeFKFPVdKkwznjB2MCpAdiMHRtQQvBgX2Gh4KHGh2cy5iUndjWVROYjh1Z05MYkVoT2xQWlFIVUo"
          secrets: |
            env/cd/SPRING_CLOUD_VAULT_URI | SPRING_CLOUD_VAULT_URI ;
            env/cd/SPRING_CLOUD_VAULT_TOKEN | SPRING_CLOUD_VAULT_TOKEN

      - name: Validate URI
        run: |
          echo "Validating URI..."
          printf '%s\n' "SPRING_CLOUD_VAULT_URI=${{ env.SPRING_CLOUD_VAULT_URI }}" | cat -v
          if [[ ! "${{ env.SPRING_CLOUD_VAULT_URI }}" =~ ^https:// ]]; then
            echo "Invalid URI: ${{ env.SPRING_CLOUD_VAULT_URI }}"
            exit 1
          fi

      - name: Fetch additional secrets from Vault
        id: vault
        run: |
          VAULT_URL="${{ env.SPRING_CLOUD_VAULT_URI }}"
          VAULT_TOKEN="${{ env.SPRING_CLOUD_VAULT_TOKEN }}"

          # Print environment variables for debugging
          echo "VAULT_URL=$VAULT_URL"
          echo "VAULT_TOKEN=$VAULT_TOKEN"

          # Fetch the secrets from Vault and capture the HTTP status code
          HTTP_STATUS=$(curl -s -o vault_response.json -w "%{http_code}" --header "X-Vault-Token: $VAULT_TOKEN" $VAULT_URL/v1/mysql/data/database)
          echo "HTTP Status: $HTTP_STATUS"
          cat vault_response.json
          VAULT_RESPONSE=$(cat vault_response.json)
          
          if [[ "$HTTP_STATUS" -ne 200 ]]; then
            echo "Failed to fetch secrets from Vault. HTTP Status: $HTTP_STATUS"
            exit 1
          fi

          # Print and parse the response
          echo "Vault Response: $VAULT_RESPONSE"
          DB_URL=$(echo $VAULT_RESPONSE | jq -r .data.data.host)
          DB_USERNAME=$(echo $VAULT_RESPONSE | jq -r .data.data.username)
          DB_PASSWORD=$(echo $VAULT_RESPONSE | jq -r .data.data.password)

          if [[ -z "$DB_URL" || -z "$DB_USERNAME" || -z "$DB_PASSWORD" ]]; then
            echo "Failed to parse Vault response."
            exit 1
          fi

          echo "DB_URL=$DB_URL" >> $GITHUB_ENV
          echo "DB_USERNAME=$DB_USERNAME" >> $GITHUB_ENV
          echo "DB_PASSWORD=$DB_PASSWORD" >> $GITHUB_ENV

      - name: Build with Maven
        run: mvn -B package --file pom.xml
        env:
          SPRING_CLOUD_VAULT_URI: ${{ env.SPRING_CLOUD_VAULT_URI }}
          SPRING_CLOUD_VAULT_TOKEN: ${{ env.SPRING_CLOUD_VAULT_TOKEN }}
          DB_URL: ${{ env.DB_URL }}
          DB_USERNAME: ${{ env.DB_USERNAME }}
          DB_PASSWORD: ${{ env.DB_PASSWORD }}

      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
